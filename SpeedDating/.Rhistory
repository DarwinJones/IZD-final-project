map_data("state") %>% head
install.packages(dyplr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
map_data("state") %>% head
install.packages("diamonds")
library(diamonds)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot")
library(ggplot2)
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(diamonds, aes(carat, price)) + geom_line()
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(economics, aes(date, uempmed)) + geom_line()
ggplot(diamonds, aes(price)) + geom_histogram(bins=100)
ggplot(fr, aes(long, lat, group=group)) + geom_polygon()
ggplot(diamonds, aes(carat, price)) + geom_bin2d()
map_data("state")
install.packages("maps")
library(maps)
map_data("state")
head(map_data("state"))
tail(map_data("state"))
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "skyblue")
fr <- map_data("state")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "skyblue")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "skyblue", fill = "gray60")
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut))
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = cut, fill = cut)
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = cut, fill = "blue")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "orange", fill = "blue")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "black", fill = "blue")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "black", fill = "cut")
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(aes(col=cut))
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1)
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1, size=0.1)
ggplot(map_data("county"), aes(long, lat)) + geom_polygon(aes(fill=region), col = "black")
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1, size=0.1) + coord_cartesian(xlim = c(0, 1), ylim = c(0, 5000))
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1, size=0.1) + coord_polar()
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1, size=0.1) + coord_flip()
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "darkened", fill = "gray80") + coord_map()
ggplot(fr, aes(long, lat, group = group)) + geom_polygon(col = "darkened", fill = "gray80") + coord_map()
ggplot(map_data("states"), aes(long, lat, group = group)) + geom_polygon(col = "darkened", fill = "gray80") + coord_map()
ggplot(map_data("county"), aes(long, lat, group = group)) + geom_polygon(col = "darkened", fill = "gray80") + coord_map()
```{r init, include=FALSE}
```{r init, include=FALSE}
```{r init, include=FALSE}
```{r init, include=FALSE}
```{r init, include=FALSE}
```{r init, include=FALSE}
```{r init, include=FALSE}
1=1
1-1
```{r init, include=FALSE}
library(dplyr)
library("httr")
library("jsonlite")
parameter <- list(key=past0(google.key, address = "AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M"))
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
## 3. transform the data into a well formatted table
install.packages("httr")
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=past0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M, address = "Seattle, WA"))
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
##
parameter <- list(key=past0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M, address = "Seattle, WA"))
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M, address = "Seattle, WA"))
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
hi
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M, address = "Seattle, WA"))
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
## 3. transform the data into a well formatted table
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
print("hi")
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
print("hi")
library(dplyr)
library(httr)
library(jsonlite)
parameter <- list(key=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
parameter <- list("key"=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = parameter)
## 2. extract the elected officials' data from the result
library(httr)
library(jsonlite)
key <- list("key"=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = key)
library(jsonlite)
keyAPI <- list("key"=paste0(AIzaSyAH4fHmX47lc6vPyE_YIJxq30zfSWCeL4M), address = "Seattle, WA")
hondaCivicData <- GET("https://www.googleapis.com/civicinfo/v2/representatives", query = keyAPI)
UFOdata <- UFO_data(dataset)
library(knitr)
library(chron)
library(dplyr)
setwd("/Users/zjrya/Desktop/INFO_201/a7-git-collaboration-a7-zach-isiah-darwin/")
dataset <- read.csv("./data/UFOCoords.csv", stringsAsFactors = FALSE)
UFOdata <- UFO_data(dataset)
source("./scipts/summaryInfo.R")
setwd("/Users/zjrya/Desktop/INFO_201/a7-git-collaboration-a7-zach-isiah-darwin/")
source("./scipts/summaryInfo.R")
source("/scipts/summaryInfo.R")
install.packages("rsconnect")
library(rsconnect)
install.packages("rsconnect")
source("/scipts/summaryInfo.R")
getwd()
setwd("/Users/zjrya/Desktop/INFO_201/a7-git-collaboration-a7-zach-isiah-darwin/")
source("/scipts/summaryInfo.R")
source("./scipts/summaryInfo.R")
source("./scipts/summaryInfo.R")
source("./scripts/summaryInfo.R")
UFOdata <- UFO_data(dataset)
##totalSigtings <-
##mostCommonState <-
##sightingsInMostCommonState <-
##percentage <-
mostCommonShape <- UFOdata$commonshapes$Shape[1]
mostCommonShape
totalSigtings <- UFOdata$totalsightings
totalSigtings
totalSigtings <- UFOdata$totalsightings[1]
totalSigtings
totalSigtings <- UFOdata$totalsightings$n
totalSigtings
mostCommonState <- UFOdata$mostpopularstates$State
mostCommonState
mostCommonState <- UFOdata$mostpopularstates$State[1]
mostCommonState
sightingsInMostCommonState <- UFOdata$mostpopularcities$City[1]
sightingsInMostCommonState
sightingsInMostCommonState <- UFOdata$mostpopularstates$n[1]
sightingsInMostCommonState
percentage <- (sightingsInMostCommonState/totalSigtings)
percentage
percentage <- round(100*(sightingsInMostCommonState/totalSigtings), 2)
percentage
Out of the 'r totalSightings' total sightings, the state with the most sightings was 'r mostCommonState'. 'r mostCommonState' had 'r sightingsInMostCommonState' out of the 'r totalSightings' total sightings. This is around 'r percentage' percent. Another important fact is that the most common shape in all of the sightings was 'r mostCommonShape'.
install.packages("knitr")
install.packages("chron")
install.packages("dplyr")
library(knitr)
library(chron)
library(dplyr)
setwd("/Users/zjrya/Desktop/INFO_201/a7-git-collaboration-a7-zach-isiah-darwin/")
dataset <- read.csv("./data/UFOCoords.csv", stringsAsFactors = FALSE)
source("./scripts/summaryInfo.R")
UFOdata <- UFO_data(dataset)
totalSigtings <- UFOdata$totalsightings$n
mostCommonState <- UFOdata$mostpopularstates$State[1]
sightingsInMostCommonState <- UFOdata$mostpopularstates$n[1]
percentage <- round(100*(sightingsInMostCommonState/totalSigtings), 2)
mostCommonShape <- UFOdata$commonshapes$Shape[1]
Out of the 'r totalSightings' total sightings, the state with the most sightings was 'r mostCommonState'. 'r mostCommonState' had 'r sightingsInMostCommonState' out of the 'r totalSightings' total sightings. This is around 'r percentage' percent. Another important fact is that the most common shape in all of the sightings was 'r mostCommonShape'.
library(knitr)
library(chron)
library(dplyr)
setwd("/Users/zjrya/Desktop/INFO_201/a7-git-collaboration-a7-zach-isiah-darwin/")
dataset <- read.csv("./data/UFOCoords.csv", stringsAsFactors = FALSE)
source("./scripts/summaryInfo.R")
UFOdata <- UFO_data(dataset)
totalSigtings <- UFOdata$totalsightings$n
mostCommonState <- UFOdata$mostpopularstates$State[1]
sightingsInMostCommonState <- UFOdata$mostpopularstates$n[1]
percentage <- round(100*(sightingsInMostCommonState/totalSigtings), 2)
mostCommonShape <- UFOdata$commonshapes$Shape[1]
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/a8-shiny-zryan3')
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/a8-shiny-zryan3')
install.packages("devtools")
library(devtools)
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
install.packages("devtools")
install.packages("devtools")
library(devtools)
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/a8-shiny-zryan3')
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
shiny::runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
runApp('C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating')
setwd("C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/")
setwd("C:/Users/zjrya/Desktop/INFO_201/IZD-final-project/SpeedDating/")
ggplot(data=dataMM, aes(x = newColumns, y = numbersMM, fill = newColumns)) +
geom_bar(stat="identity", width = 1) +
geom_text(aes(label= round(numbersMM, digits = 2)), vjust=1.6, color="white", size=3.5)+
theme_minimal() +
labs(x = "", y = "", fill = "") + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
library(dplyr)
library(shiny)
library(ggplot2)
ggplot(data=dataMM, aes(x = newColumns, y = numbersMM, fill = newColumns)) +
geom_bar(stat="identity", width = 1) +
geom_text(aes(label= round(numbersMM, digits = 2)), vjust=1.6, color="white", size=3.5)+
theme_minimal() +
labs(x = "", y = "", fill = "") + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
